.tags-page {
  width: 100%;
  padding: var(--spacing-lg);
}

.page-header {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.page-header h1 {
  margin: 0;
  font-size: 1.5rem;
  color: #333;
}

.action-buttons {
  display: flex;
  gap: 1rem;
}

.add-button,
.refresh-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s;
}

.tags-content {
  position: relative;
  min-height: 300px;
}

.tag-name-cell {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.tag-name {
  font-weight: 500;
  color: #333;
}

.tag-description {
  font-size: 0.9rem;
  color: #666;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  background-color: white;
  border-radius: 8px;
  width: 90%;
  max-width: 500px;
  max-height: 90vh;
  overflow-y: auto;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-bottom: 1px solid #e0e0e0;
}

.modal-header h2 {
  margin: 0;
  font-size: 1.25rem;
  color: #333;
}

.close-button {
  background: none;
  border: none;
  font-size: 1.5rem;
  color: #666;
  cursor: pointer;
}

.modal-error {
  padding: 1rem;
}

.error-alert {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  background-color: #f8d7da;
  color: #721c24;
  border-radius: 4px;
}

.error-icon {
  font-size: 1.2rem;
}

@media (max-width: 768px) {
  .tags-page {
    padding: 1rem;
  }

  .page-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .action-buttons {
    width: 100%;
    flex-direction: column;
  }

  .add-button,
  .refresh-button {
    width: 100%;
    justify-content: center;
  }
} 

.success-message-container {
  background-color: var(--success-bg); /* Define this variable in your root CSS if not already */
  color: var(--success-text); /* Define this variable */
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-sm);
  margin-bottom: var(--spacing-md);
  text-align: center;
  font-weight: 500;
  box-shadow: var(--shadow-sm);
  animation: fadeOut 3s forwards; /* Animation to fade out */
  position: sticky; /* Make it sticky */
  top: 0; /* Position at the top */
  z-index: 1000; /* Ensure it's above other content */
}

/* Optional: Define success variables if you don't have them */
/* Example in your root/variables.css:
:root {
  --success-bg: rgba(65, 192, 139, 0.15);
  --success-text: #28a745;
  --error-bg: rgba(255, 87, 87, 0.15);
  --error-text: #dc3545;
}
*/

/* Keyframes for fade out animation */
@keyframes fadeOut {
  0% { opacity: 1; transform: translateY(0); }
  80% { opacity: 1; transform: translateY(0); } /* Stay visible for most of the duration */
  100% { opacity: 0; transform: translateY(-20px); display: none; } /* Fade out and move up slightly */
}

/* Optional: Basic error message styling if you want it visible too */
.error-message-container {
  background-color: var(--error-bg);
  color: var(--error-text);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-sm);
  margin-bottom: var(--spacing-md);
  text-align: center;
  font-weight: 500;
  box-shadow: var(--shadow-sm);
}